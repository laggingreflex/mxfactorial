version: 2
jobs:
  build:
    docker:
      - image: circleci/node:latest-browsers
    working_directory: ~/repo
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Upgrade
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: /
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - checkout
      - restore_cache:
          paths:
            - react/node_modules
          key: v1-dependencies-{{ checksum "react/package.json" }}
      - run: cd react && npm install
      - run: cd react && npm test
      # - run: cd react && npm run ci:e2e
      - save_cache:
          paths:
            - react/node_modules
          key: v1-dependencies-{{ checksum "react/package.json" }}
  deploy:
    docker:
      - image: circleci/node:latest-browsers
    working_directory: ~/repo
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Upgrade
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install python and awscli
          working_directory: /
          command: |
            sudo apt-get install -yq python-dev python-pip --fix-missing
            sudo pip install awscli
      - checkout
      - run: cd react && npm install
      - run: cd react && npm run build
      - run:
          name: Deploy to S3
          command: aws s3 sync react/build/ s3://mxfactorial-web --delete
      - run:
          name: Change aws configuration
          command: aws configure set preview.cloudfront true
      - run:
          name: Terminate cache for distribution WITHOUT www prefix
          command: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
      - run:
          name: Terminate cache for distribution WITH www prefix
          command: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_WWW_DISTRIBUTION_ID --paths "/*"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master